[
  {
    "question": "统计最近7天各服务区总营收额及环比增长率，并按营收排名TOP5",
    "sql": "WITH daily_revenue AS (SELECT oper_date, service_name, SUM(pay_sum) AS total_revenue FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date >= CURRENT_DATE - INTERVAL '7 days' GROUP BY oper_date, service_name), ranked_revenue AS (SELECT oper_date, service_name, total_revenue, RANK() OVER(PARTITION BY oper_date ORDER BY total_revenue DESC) AS rank FROM daily_revenue) SELECT * FROM ranked_revenue WHERE rank <=5 ORDER BY oper_date DESC, total_revenue DESC;"
  },
  {
    "question": "分析2023年国庆黄金周期间各支付方式订单占比变化趋势",
    "sql": "SELECT oper_date, SUM(wx_order) AS 微信订单, SUM(zf_order) AS 支付宝订单, SUM(rmb_order) AS 现金订单, SUM(xs_order) AS 行吧订单, SUM(order_sum) AS 总订单 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date BETWEEN '2023-10-01' AND '2023-10-07' GROUP BY oper_date ORDER BY oper_date;"
  },
  {
    "question": "对比2023年Q3各季度不同服务区类型的平均客单价（总支付金额/订单总数）",
    "sql": "SELECT CASE WHEN sa.service_area_type = '信息化服务区' THEN '信息化' ELSE '智能化' END AS 服务区类型, EXTRACT(QUARTER FROM bdd.oper_date) AS 季度, AVG(bdd.pay_sum / NULLIF(bdd.order_sum,0)) AS 平均客单价 FROM bss_business_day_data bdd JOIN bss_service_area sa ON bdd.service_no = sa.service_area_no WHERE bdd.delete_ts IS NULL AND sa.delete_ts IS NULL AND bdd.oper_date BETWEEN '2023-07-01' AND '2023-09-30' GROUP BY 服务区类型, 季度 ORDER BY 季度, 平均客单价 DESC;"
  },
  {
    "question": "找出最近30天现金支付占比超过15%且营收超百万的服务区",
    "sql": "SELECT service_name, COUNT(*) AS 统计天数, SUM(pay_sum) AS 总营收, SUM(rmb) / SUM(pay_sum) AS 现金占比 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date >= CURRENT_DATE - INTERVAL '30 days' GROUP BY service_name HAVING SUM(pay_sum) > 1000000 AND SUM(rmb)/SUM(pay_sum) > 0.15 ORDER BY 现金占比 DESC;"
  },
  {
    "question": "分析工作日与非工作日各支付方式的金额分布差异（以周为单位统计）",
    "sql": "SELECT TO_CHAR(oper_date, 'IW') AS 周序号, CASE WHEN EXTRACT(ISODOW FROM oper_date) IN (6,7) THEN '周末' ELSE '工作日' END AS 日类型, ROUND(AVG(wx/pay_sum),4) AS 微信占比, ROUND(AVG(zfb/pay_sum),4) AS 支付宝占比, ROUND(AVG(rmb/pay_sum),4) AS 现金占比 FROM bss_business_day_data WHERE delete_ts IS NULL GROUP BY 周序号, 日类型 ORDER BY 周序号;"
  },
  {
    "question": "查询2023年9月营收环比增长超过20%且订单增长超过30%的优质服务区",
    "sql": "WITH monthly_data AS (SELECT service_name, EXTRACT(MONTH FROM oper_date) AS 月份, SUM(pay_sum) AS 总营收, SUM(order_sum) AS 总订单 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date BETWEEN '2023-08-01' AND '2023-09-30' GROUP BY service_name, 月份) SELECT m1.service_name, m1.月份, m1.总营收 AS 九月营收, m0.总营收 AS 八月营收, (m1.总营收/m0.总营收-1)*100 AS 营收增长率, (m1.总订单/m0.总订单-1)*100 AS 订单增长率 FROM monthly_data m1 JOIN monthly_data m0 ON m1.service_name = m0.service_name AND m1.月份 = 9 AND m0.月份 =8 WHERE m1.总营收/m0.总营收 >1.2 AND m1.总订单/m0.总订单 >1.3;"
  },
  {
    "question": "统计各档口类型（餐饮/零售/其他）的平均档口营收贡献度（单个档口平均营收）",
    "sql": "SELECT CASE WHEN branch_name ~* '(餐饮|餐厅|快餐)' THEN '餐饮' WHEN branch_name ~* '(超市|零售)' THEN '零售' ELSE '其他' END AS 档口类型, COUNT(*) AS 档口数量, AVG(pay_sum) AS 平均营收 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date = CURRENT_DATE - INTERVAL '1 day' GROUP BY 档口类型 ORDER BY 平均营收 DESC;"
  },
  {
    "question": "查询最近一周每日各时段（早/中/晚）的营收分布（06-12/12-18/18-24）",
    "sql": "SELECT oper_date, CASE WHEN EXTRACT(HOUR FROM create_ts) BETWEEN 6 AND 11 THEN '上午' WHEN EXTRACT(HOUR FROM create_ts) BETWEEN 12 AND 17 THEN '下午' ELSE '晚上' END AS 时段, SUM(pay_sum) AS 营收额 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date >= CURRENT_DATE - INTERVAL '7 days' GROUP BY oper_date, 时段 ORDER BY oper_date DESC;"
  },
  {
    "question": "找出2023年累计现金支付金额最高的前10名服务区及对应公司信息",
    "sql": "SELECT bdd.service_name, sc.company_name, SUM(bdd.rmb) AS 累计现金营收 FROM bss_business_day_data bdd JOIN bss_service_area sa ON bdd.service_no = sa.service_area_no JOIN bss_company sc ON sa.company_id = sc.id WHERE bdd.delete_ts IS NULL AND bdd.oper_date BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY bdd.service_name, sc.company_name ORDER BY 累计现金营收 DESC LIMIT 10;"
  },
  {
    "question": "分析连续3天以上日营收波动幅度超过15%的异常服务区",
    "sql": "WITH daily_revenue AS (SELECT service_name, oper_date, pay_sum AS revenue, LAG(pay_sum,1) OVER(PARTITION BY service_name ORDER BY oper_date) AS prev_revenue FROM bss_business_day_data WHERE delete_ts IS NULL), volatility AS (SELECT *, ABS((revenue - prev_revenue)/NULLIF(prev_revenue,0))*100 AS change_rate FROM daily_revenue) SELECT service_name, COUNT(*) AS 连续异常天数 FROM volatility WHERE change_rate >15 GROUP BY service_name HAVING COUNT(*) >=3 ORDER BY 连续异常天数 DESC;"
  },
  {
    "question": "统计各车辆类型在2023年每月的数量变化趋势，用于分析季节性波动",
    "sql": "SELECT date_trunc('month', count_date) AS 统计月份, car_type AS 车辆类型, SUM(customer_count) AS 总车流量 FROM bss_car_day_count WHERE count_date BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY 统计月份, 车辆类型 ORDER BY 统计月份;"
  },
  {
    "question": "对比各服务区2023年Q2总车流量，找出TOP5最繁忙服务区",
    "sql": "SELECT s.service_area_name AS 服务区名称, SUM(c.customer_count) AS 总车流量 FROM bss_car_day_count c JOIN bss_service_area s ON c.service_area_id = s.id WHERE c.count_date BETWEEN '2023-04-01' AND '2023-06-30' AND s.delete_ts IS NULL GROUP BY 服务区名称 ORDER BY 总车流量 DESC LIMIT 5;"
  },
  {
    "question": "计算2023年各季度不同车辆类型的平均日车流量，分析车型结构变化",
    "sql": "SELECT date_part('quarter', count_date) AS 季度, car_type AS 车辆类型, AVG(customer_count) AS 平均日流量 FROM bss_car_day_count WHERE count_date >= '2023-01-01' GROUP BY 季度, 车辆类型 ORDER BY 季度;"
  },
  {
    "question": "分析最近30天工作日与周末的车流差异，统计各车型占比",
    "sql": "SELECT CASE WHEN EXTRACT(isodow FROM count_date) IN (6,7) THEN '周末' ELSE '工作日' END AS 日期类型, car_type AS 车辆类型, SUM(customer_count) AS 总量, ROUND(SUM(customer_count)*100/(SELECT SUM(customer_count) FROM bss_car_day_count WHERE count_date >= CURRENT_DATE - 30), 2) AS 占比百分比 FROM bss_car_day_count WHERE count_date >= CURRENT_DATE - 30 GROUP BY 日期类型, 车辆类型;"
  },
  {
    "question": "找出2023年车流量环比增长最高的服务区（按月统计）",
    "sql": "WITH monthly_sum AS (SELECT service_area_id, date_trunc('month', count_date) AS 月份, SUM(customer_count) AS 月总量 FROM bss_car_day_count WHERE count_date >= '2023-01-01' GROUP BY service_area_id, 月份) SELECT service_area_id, 月份, 月总量, LAG(月总量) OVER (PARTITION BY service_area_id ORDER BY 月份) AS 上月流量, ROUND((月总量 - LAG(月总量) OVER (PARTITION BY service_area_id ORDER BY 月份)) * 100 / LAG(月总量) OVER (PARTITION BY service_area_id ORDER BY 月份), 2) AS 环比增长率 FROM monthly_sum ORDER BY 环比增长率 DESC LIMIT 1;"
  },
  {
    "question": "统计危化品车辆在各服务区的分布情况，识别重点监控区域",
    "sql": "SELECT s.service_area_name AS 服务区名称, SUM(c.customer_count) AS 危化品车流量 FROM bss_car_day_count c JOIN bss_service_area s ON c.service_area_id = s.id WHERE c.car_type = '危化品' AND s.delete_ts IS NULL GROUP BY 服务区名称 ORDER BY 危化品车流量 DESC;"
  },
  {
    "question": "分析特定服务区（如ID为'17461166e7fa3ecda03534a5795ce985'）各车型月均流量对比",
    "sql": "SELECT car_type AS 车辆类型, AVG(customer_count) AS 月均流量 FROM bss_car_day_count WHERE service_area_id = '17461166e7fa3ecda03534a5795ce985' GROUP BY 车辆类型 ORDER BY 月均流量 DESC;"
  },
  {
    "question": "统计最近7天每日总车流量及环比变化率，监控实时流量波动",
    "sql": "SELECT count_date AS 统计日期, SUM(customer_count) AS 当日流量, LAG(SUM(customer_count)) OVER (ORDER BY count_date) AS 昨日流量, ROUND((SUM(customer_count) - LAG(SUM(customer_count)) OVER (ORDER BY count_date)) * 100 / LAG(SUM(customer_count)) OVER (ORDER BY count_date), 2) AS 环比变化率 FROM bss_car_day_count WHERE count_date >= CURRENT_DATE - 7 GROUP BY count_date ORDER BY count_date;"
  },
  {
    "question": "对比2022与2023年Q1各车型流量变化，识别增长显著车型",
    "sql": "SELECT car_type AS 车辆类型, SUM(CASE WHEN EXTRACT(year FROM count_date) = 2022 THEN customer_count ELSE 0 END) AS \"2022年流量\", SUM(CASE WHEN EXTRACT(year FROM count_date) = 2023 THEN customer_count ELSE 0 END) AS \"2023年流量\", ROUND((SUM(CASE WHEN EXTRACT(year FROM count_date) = 2023 THEN customer_count ELSE 0 END) - SUM(CASE WHEN EXTRACT(year FROM count_date) = 2022 THEN customer_count ELSE 0 END)) * 100 / SUM(CASE WHEN EXTRACT(year FROM count_date) = 2022 THEN customer_count ELSE 0 END), 2) AS 增长率 FROM bss_car_day_count WHERE count_date BETWEEN '2022-01-01' AND '2023-03-31' AND date_part('quarter', count_date) = 1 GROUP BY 车辆类型 ORDER BY 增长率 DESC;"
  },
  {
    "question": "统计不同路段路线关联服务区的车流总量，分析路段繁忙程度",
    "sql": "SELECT r.route_name AS 路线名称, SUM(c.customer_count) AS 总车流量 FROM bss_car_day_count c JOIN bss_section_route_area_link l ON c.service_area_id = l.service_area_id JOIN bss_section_route r ON l.section_route_id = r.id GROUP BY 路线名称 ORDER BY 总车流量 DESC;"
  },
  {
    "question": "各运营公司管理的服务区数量对比",
    "sql": "SELECT c.company_name AS 公司名称, COUNT(sa.id) AS 服务区数量 FROM bss_service_area sa JOIN bss_company c ON sa.company_id = c.id WHERE sa.delete_ts IS NULL AND c.delete_ts IS NULL GROUP BY c.company_name ORDER BY 服务区数量 DESC;"
  },
  {
    "question": "计算各公司服务区最近一个月的平均日营收（按公司分组）",
    "sql": "SELECT c.company_name AS 公司名称, AVG(bdd.pay_sum) AS 平均日营收 FROM bss_service_area sa JOIN bss_company c ON sa.company_id = c.id JOIN bss_business_day_data bdd ON sa.service_area_no = bdd.service_no WHERE sa.delete_ts IS NULL AND c.delete_ts IS NULL AND bdd.oper_date >= CURRENT_DATE - INTERVAL '30 days' GROUP BY c.company_name;"
  },
  {
    "question": "统计各公司服务区开放率（开放状态服务区占比）",
    "sql": "SELECT c.company_name AS 公司名称, ROUND(COUNT(CASE WHEN sa.service_state = '开放' THEN 1 END)*100.0 / COUNT(sa.id), 2) AS 开放率百分比 FROM bss_service_area sa JOIN bss_company c ON sa.company_id = c.id WHERE sa.delete_ts IS NULL AND c.delete_ts IS NULL GROUP BY c.company_name;"
  },
  {
    "question": "最近一周营收总额排名前五的服务区及所属公司",
    "sql": "SELECT sa.service_area_name AS 服务区名称, c.company_name AS 公司名称, SUM(bdd.pay_sum) AS 总营收 FROM bss_service_area sa JOIN bss_company c ON sa.company_id = c.id JOIN bss_business_day_data bdd ON sa.service_area_no = bdd.service_no WHERE sa.delete_ts IS NULL AND c.delete_ts IS NULL AND bdd.oper_date >= CURRENT_DATE - INTERVAL '7 days' GROUP BY sa.service_area_name, c.company_name ORDER BY 总营收 DESC LIMIT 5;"
  },
  {
    "question": "查询某运营公司管理的所有服务区的详细信息（包含名称、编码、状态）",
    "sql": "SELECT sa.service_area_name AS 服务区名称, sa.service_area_no AS 编码, sa.service_state AS 状态 FROM bss_service_area sa JOIN bss_company c ON sa.company_id = c.id WHERE sa.delete_ts IS NULL AND c.delete_ts IS NULL AND c.company_name = '宜春分公司';"
  },
  {
    "question": "按服务区类型统计各公司的管理规模（数量分布）",
    "sql": "SELECT c.company_name AS 公司名称, sa.service_area_type AS 服务区类型, COUNT(*) AS 数量 FROM bss_service_area sa JOIN bss_company c ON sa.company_id = c.id WHERE sa.delete_ts IS NULL AND c.delete_ts IS NULL GROUP BY c.company_name, sa.service_area_type;"
  },
  {
    "question": "计算各公司最近30天日均订单量并按降序排列",
    "sql": "SELECT c.company_name AS 公司名称, AVG(bdd.order_sum) AS 日均订单量 FROM bss_service_area sa JOIN bss_company c ON sa.company_id = c.id JOIN bss_business_day_data bdd ON sa.service_area_no = bdd.service_no WHERE sa.delete_ts IS NULL AND c.delete_ts IS NULL AND bdd.oper_date >= CURRENT_DATE - INTERVAL '30 days' GROUP BY c.company_name ORDER BY 日均订单量 DESC;"
  },
  {
    "question": "分析各公司管理服务区的营收与车流量相关性（取平均值）",
    "sql": "SELECT c.company_name AS 公司名称, AVG(bdd.pay_sum) AS 平均营收, AVG(car.customer_count) AS 平均车流量 FROM bss_service_area sa JOIN bss_company c ON sa.company_id = c.id JOIN bss_business_day_data bdd ON sa.service_area_no = bdd.service_no JOIN bss_car_day_count car ON sa.id = car.service_area_id WHERE sa.delete_ts IS NULL AND c.delete_ts IS NULL AND bdd.oper_date = CURRENT_DATE - INTERVAL '1 day' GROUP BY c.company_name;"
  },
  {
    "question": "统计各公司不同状态服务区的数量分布",
    "sql": "SELECT c.company_name AS 公司名称, sa.service_state AS 状态, COUNT(*) AS 数量 FROM bss_service_area sa JOIN bss_company c ON sa.company_id = c.id WHERE sa.delete_ts IS NULL AND c.delete_ts IS NULL GROUP BY c.company_name, sa.service_state ORDER BY 公司名称, 状态;"
  },
  {
    "question": "获取某公司下营收最高的前10个服务区及具体数值",
    "sql": "SELECT sa.service_area_name AS 服务区名称, SUM(bdd.pay_sum) AS 总营收 FROM bss_service_area sa JOIN bss_business_day_data bdd ON sa.service_area_no = bdd.service_no WHERE sa.delete_ts IS NULL AND sa.company_id = '30675d85ba5044c31acfa243b9d16334' GROUP BY sa.service_area_name ORDER BY 总营收 DESC LIMIT 10;"
  },
  {
    "question": "统计各路段路线关联的服务区数量，并按数量降序排列",
    "sql": "SELECT sr.section_name AS 路段名称, sr.route_name AS 路线名称, COUNT(link.service_area_id) AS 服务区数量 FROM bss_section_route sr JOIN bss_section_route_area_link link ON sr.id = link.section_route_id AND sr.delete_ts IS NULL GROUP BY sr.section_name, sr.route_name ORDER BY 服务区数量 DESC;"
  },
  {
    "question": "查找未关联任何服务区的路段路线信息",
    "sql": "SELECT sr.section_name AS 路段名称, sr.route_name AS 路线名称 FROM bss_section_route sr LEFT JOIN bss_section_route_area_link link ON sr.id = link.section_route_id WHERE link.service_area_id IS NULL AND sr.delete_ts IS NULL;"
  },
  {
    "question": "分析不同路段名称对应的服务区数量分布",
    "sql": "SELECT sr.section_name AS 路段名称, COUNT(DISTINCT link.service_area_id) AS 服务区数量 FROM bss_section_route sr JOIN bss_section_route_area_link link ON sr.id = link.section_route_id AND sr.delete_ts IS NULL GROUP BY sr.section_name;"
  },
  {
    "question": "统计每个服务区关联的路段路线数量并筛选大于1的记录",
    "sql": "SELECT sa.service_area_name AS 服务区名称, COUNT(link.section_route_id) AS 关联路线数量 FROM bss_service_area sa JOIN bss_section_route_area_link link ON sa.id = link.service_area_id AND sa.delete_ts IS NULL GROUP BY sa.service_area_name HAVING COUNT(link.section_route_id) > 1;"
  },
  {
    "question": "列出2023年之后创建的路段路线及其关联的服务区数量",
    "sql": "SELECT sr.section_name AS 路段名称, sr.route_name AS 路线名称, COUNT(link.service_area_id) AS 服务区数量 FROM bss_section_route sr JOIN bss_section_route_area_link link ON sr.id = link.section_route_id AND sr.delete_ts IS NULL WHERE sr.create_ts >= '2023-01-01' GROUP BY sr.section_name, sr.route_name;"
  },
  {
    "question": "按服务区状态统计关联的路段路线数量分布",
    "sql": "SELECT sa.service_state AS 服务区状态, COUNT(DISTINCT link.section_route_id) AS 路线数量 FROM bss_service_area sa JOIN bss_section_route_area_link link ON sa.id = link.service_area_id AND sa.delete_ts IS NULL GROUP BY sa.service_state;"
  },
  {
    "question": "查找关联超过2个服务区的路段路线信息",
    "sql": "SELECT sr.section_name AS 路段名称, sr.route_name AS 路线名称 FROM bss_section_route sr JOIN bss_section_route_area_link link ON sr.id = link.section_route_id AND sr.delete_ts IS NULL GROUP BY sr.section_name, sr.route_name HAVING COUNT(link.service_area_id) > 2;"
  },
  {
    "question": "统计昌九路段下各路线关联的服务区数量",
    "sql": "SELECT sr.route_name AS 路线名称, COUNT(link.service_area_id) AS 服务区数量 FROM bss_section_route sr JOIN bss_section_route_area_link link ON sr.id = link.section_route_id AND sr.delete_ts IS NULL WHERE sr.section_name = '昌九' GROUP BY sr.route_name;"
  },
  {
    "question": "获取关联服务区数量最少的前5个路段路线",
    "sql": "SELECT sr.section_name AS 路段名称, sr.route_name AS 路线名称, COUNT(link.service_area_id) AS 服务区数量 FROM bss_section_route sr JOIN bss_section_route_area_link link ON sr.id = link.section_route_id AND sr.delete_ts IS NULL GROUP BY sr.section_name, sr.route_name ORDER BY 服务区数量 ASC LIMIT 5;"
  },
  {
    "question": "查询各路段路线关联服务区的地理位置坐标信息",
    "sql": "SELECT sr.section_name AS 路段名称, sr.route_name AS 路线名称, sa.service_area_name AS 服务区名称, sa.service_position AS 地理坐标 FROM bss_section_route sr JOIN bss_section_route_area_link link ON sr.id = link.section_route_id JOIN bss_service_area sa ON link.service_area_id = sa.id WHERE sr.delete_ts IS NULL AND sa.delete_ts IS NULL;"
  },
  {
    "question": "信息化与智能化服务区的平均每日营收对比（按服务类型分组）？",
    "sql": "SELECT sa.service_area_type AS 服务区类型, AVG(bd.pay_sum) AS 平均营收 FROM bss_business_day_data bd JOIN bss_service_area sa ON bd.service_no = sa.service_area_no WHERE bd.delete_ts IS NULL AND sa.delete_ts IS NULL GROUP BY sa.service_area_type;"
  },
  {
    "question": "统计不同服务区类型的车辆通行量占比（按服务类型分组）？",
    "sql": "SELECT sa.service_area_type AS 类型, SUM(cc.customer_count) AS 总车流量, ROUND(SUM(cc.customer_count)*100.0/(SELECT SUM(customer_count) FROM bss_car_day_count WHERE delete_ts IS NULL),2) AS 占比 FROM bss_car_day_count cc JOIN bss_service_area sa ON cc.service_area_id = sa.id WHERE cc.delete_ts IS NULL AND sa.delete_ts IS NULL GROUP BY sa.service_area_type;"
  },
  {
    "question": "按地理位置划分服务区数量分布（经度区间分组）？",
    "sql": "SELECT CASE WHEN split_part(service_position, ',', 1)::numeric BETWEEN 114 AND 116 THEN '区域A' WHEN split_part(service_position, ',', 1)::numeric BETWEEN 116 AND 118 THEN '区域B' ELSE '其他' END AS 区域, COUNT(*) AS 数量 FROM bss_service_area WHERE delete_ts IS NULL GROUP BY 区域;"
  },
  {
    "question": "近30天营收最高的10个服务区（按总支付金额降序）？",
    "sql": "SELECT service_name AS 服务区名称, SUM(pay_sum) AS 总营收 FROM bss_business_day_data WHERE oper_date >= CURRENT_DATE - 30 AND delete_ts IS NULL GROUP BY service_name ORDER BY 总营收 DESC LIMIT 10;"
  },
  {
    "question": "信息化与智能化服务区月度营收趋势对比（最近3个月）？",
    "sql": "SELECT sa.service_area_type AS 类型, DATE_TRUNC('month', bd.oper_date) AS 月份, SUM(bd.pay_sum) AS 月总营收 FROM bss_business_day_data bd JOIN bss_service_area sa ON bd.service_no = sa.service_area_no WHERE bd.oper_date >= CURRENT_DATE - INTERVAL '3 months' AND bd.delete_ts IS NULL AND sa.delete_ts IS NULL GROUP BY 类型, 月份 ORDER BY 月份;"
  },
  {
    "question": "不同状态的服务区平均日营收对比（按开放/关闭状态分组）？",
    "sql": "SELECT sa.service_state AS 状态, AVG(bd.pay_sum) AS 平均日营收, COUNT(DISTINCT bd.oper_date) AS 统计天数 FROM bss_business_day_data bd JOIN bss_service_area sa ON bd.service_no = sa.service_area_no WHERE bd.delete_ts IS NULL AND sa.delete_ts IS NULL GROUP BY sa.service_state;"
  },
  {
    "question": "不同类型服务区各支付方式金额占比（微信/支付宝/现金）？",
    "sql": "SELECT sa.service_area_type AS 类型, ROUND(SUM(bd.wx)/SUM(bd.pay_sum)*100,2) AS 微信占比, ROUND(SUM(bd.zfb)/SUM(bd.pay_sum)*100,2) AS 支付宝占比, ROUND(SUM(bd.rmb)/SUM(bd.pay_sum)*100,2) AS 现金占比 FROM bss_business_day_data bd JOIN bss_service_area sa ON bd.service_no = sa.service_area_no WHERE bd.delete_ts IS NULL AND sa.delete_ts IS NULL GROUP BY sa.service_area_type;"
  },
  {
    "question": "区域覆盖率与营收关系分析（按经度区间统计平均营收）？",
    "sql": "SELECT CASE WHEN split_part(sa.service_position, ',', 1)::numeric BETWEEN 114 AND 116 THEN '区域A' WHEN split_part(sa.service_position, ',', 1)::numeric BETWEEN 116 AND 118 THEN '区域B' ELSE '其他' END AS 区域, sa.service_area_type AS 类型, AVG(bd.pay_sum) AS 平均营收 FROM bss_business_day_data bd JOIN bss_service_area sa ON bd.service_no = sa.service_area_no WHERE bd.delete_ts IS NULL AND sa.delete_ts IS NULL GROUP BY 区域, 类型;"
  },
  {
    "question": "最近一周营收下降TOP5服务区（对比前一周环比）？",
    "sql": "WITH last_week AS (SELECT service_name, SUM(pay_sum) AS 总营收 FROM bss_business_day_data WHERE oper_date >= CURRENT_DATE - 7 AND delete_ts IS NULL GROUP BY service_name), prev_week AS (SELECT service_name, SUM(pay_sum) AS 总营收 FROM bss_business_day_data WHERE oper_date BETWEEN CURRENT_DATE - 14 AND CURRENT_DATE - 8 AND delete_ts IS NULL GROUP BY service_name) SELECT l.service_name, ROUND((p.总营收 - l.总营收)/p.总营收*100,2) AS 下降比 FROM last_week l JOIN prev_week p ON l.service_name = p.service_name WHERE l.总营收 < p.总营收 ORDER BY 下降比 ASC LIMIT 5;"
  }
]