[
  {
    "question": "统计最近7天各服务区总营收排名（按支付总金额）",
    "sql": "SELECT service_name AS 服务区名称, SUM(pay_sum) AS 总营收 FROM bss_business_day_data WHERE oper_date >= CURRENT_DATE - 7 AND delete_ts IS NULL GROUP BY service_name ORDER BY 总营收 DESC LIMIT 10;"
  },
  {
    "question": "分析2023年4月1日各档口微信支付占比（微信金额/总支付金额）",
    "sql": "SELECT branch_name AS 档口名称, (SUM(wx)/SUM(pay_sum))*100 AS 微信支付占比 FROM bss_business_day_data WHERE oper_date = '2023-04-01' AND delete_ts IS NULL GROUP BY branch_name HAVING SUM(pay_sum) > 0;"
  },
  {
    "question": "查询2023年4月各服务区支付宝订单量变化趋势（按月统计）",
    "sql": "SELECT service_name AS 服务区名称, DATE_TRUNC('month', oper_date) AS 月份, SUM(zf_order) AS 支付宝订单量 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-04-01' AND '2023-04-30' AND delete_ts IS NULL GROUP BY 服务区名称, 月份 ORDER BY 月份;"
  },
  {
    "question": "对比2023年4月1日现金支付与行吧支付金额前5的服务区",
    "sql": "SELECT service_name AS 服务区名称, SUM(rmb) AS 现金支付金额, SUM(xs) AS 行吧支付金额 FROM bss_business_day_data WHERE oper_date = '2023-04-01' AND delete_ts IS NULL GROUP BY service_name ORDER BY 现金支付金额 DESC, 行吧支付金额 DESC LIMIT 5;"
  },
  {
    "question": "统计各支付渠道（微信/支付宝/现金）的平均订单金额（金额/订单量）",
    "sql": "SELECT (SUM(wx)/SUM(wx_order)) AS 微信平均订单额, (SUM(zfb)/SUM(zf_order)) AS 支付宝平均订单额, (SUM(rmb)/SUM(rmb_order)) AS 现金平均订单额 FROM bss_business_day_data WHERE delete_ts IS NULL AND wx_order > 0 AND zf_order > 0 AND rmb_order > 0;"
  },
  {
    "question": "查询2023年4月订单总量TOP10的服务区及日均订单量",
    "sql": "SELECT service_name AS 服务区名称, SUM(order_sum) AS 总订单量, AVG(order_sum) AS 日均订单量 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-04-01' AND '2023-04-30' AND delete_ts IS NULL GROUP BY service_name ORDER BY 总订单量 DESC LIMIT 10;"
  },
  {
    "question": "分析庐山服务区2023年4月每日总营收变化趋势（折线图数据）",
    "sql": "SELECT oper_date AS 统计日期, pay_sum AS 当日营收 FROM bss_business_day_data WHERE service_name = '庐山服务区' AND oper_date BETWEEN '2023-04-01' AND '2023-04-30' AND delete_ts IS NULL ORDER BY oper_date;"
  },
  {
    "question": "统计各服务区微信支付金额占比（wx/(wx+zfb+rmb+xs+jd)）超过30%的数量",
    "sql": "SELECT COUNT(*) AS 服务区数量 FROM (SELECT service_name, (SUM(wx) / (SUM(wx)+SUM(zfb)+SUM(rmb)+SUM(xs)+SUM(jd))) * 100 AS 微信占比 FROM bss_business_day_data WHERE delete_ts IS NULL GROUP BY service_name) t WHERE 微信占比 > 30;"
  },
  {
    "question": "查询2023年4月现金支付订单占比超过50%的服务区明细",
    "sql": "SELECT service_name AS 服务区名称, SUM(rmb_order) AS 现金订单量, SUM(order_sum) AS 总订单量, (SUM(rmb_order)/SUM(order_sum))*100 AS 现金占比 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-04-01' AND '2023-04-30' AND delete_ts IS NULL GROUP BY service_name HAVING (SUM(rmb_order)/SUM(order_sum)) > 0.5;"
  },
  {
    "question": "统计各公司下属服务区2023年4月人均消费（总支付金额/车辆数）TOP5",
    "sql": "SELECT s.company_id AS 公司ID, b.service_name AS 服务区名称, SUM(b.pay_sum)/MAX(c.customer_count) AS 人均消费 FROM bss_business_day_data b LEFT JOIN bss_service_area s ON b.service_no = s.service_area_no LEFT JOIN bss_car_day_count c ON b.service_name = c.service_area_id WHERE b.oper_date BETWEEN '2023-04-01' AND '2023-04-30' AND b.delete_ts IS NULL AND c.delete_ts IS NULL GROUP BY s.company_id, b.service_name ORDER BY 人均消费 DESC LIMIT 5;"
  },
  {
    "question": "统计2023年4月各服务区日均车流量TOP10，并展示地理位置坐标",
    "sql": "SELECT sa.service_area_name AS 服务区名称, sa.service_position AS 地理位置坐标, AVG(car.customer_count) AS 日均车流量 FROM bss_car_day_count car INNER JOIN bss_service_area sa ON car.service_area_id = sa.id WHERE car.count_date BETWEEN '2023-04-01' AND '2023-04-30' AND car.delete_ts IS NULL AND sa.delete_ts IS NULL GROUP BY sa.service_area_name, sa.service_position ORDER BY 日均车流量 DESC LIMIT 10;"
  },
  {
    "question": "分析危化品车辆在各服务区的分布比例，筛选出占比超过5%的服务区",
    "sql": "SELECT sa.service_area_name AS 服务区名称, (SUM(CASE WHEN car.car_type='危化品' THEN car.customer_count ELSE 0 END)/SUM(car.customer_count)*100)::numeric(5,2) AS 危化品占比 FROM bss_car_day_count car INNER JOIN bss_service_area sa ON car.service_area_id = sa.id WHERE car.delete_ts IS NULL AND sa.delete_ts IS NULL GROUP BY sa.service_area_name HAVING (SUM(CASE WHEN car.car_type='危化品' THEN car.customer_count ELSE 0 END)/SUM(car.customer_count)*100) > 5 ORDER BY 危化品占比 DESC;"
  },
  {
    "question": "展示2023年Q2季度城际车辆通行量环比增长率（按月统计）",
    "sql": "WITH monthly_data AS (SELECT EXTRACT(MONTH FROM count_date) AS 月份, SUM(customer_count) AS 总通行量 FROM bss_car_day_count WHERE car_type='城际' AND count_date BETWEEN '2023-04-01' AND '2023-06-30' AND delete_ts IS NULL GROUP BY EXTRACT(MONTH FROM count_date)) SELECT 月份, 总通行量, (总通行量 - LAG(总通行量,1) OVER(ORDER BY 月份))/LAG(总通行量,1) OVER(ORDER BY 月份)*100 AS 环比增长率 FROM monthly_data ORDER BY 月份;"
  },
  {
    "question": "查询2023年单日车流量超过1000辆的服务区及对应日期",
    "sql": "SELECT sa.service_area_name AS 服务区名称, car.count_date AS 统计日期, car.customer_count AS 车流量 FROM bss_car_day_count car INNER JOIN bss_service_area sa ON car.service_area_id = sa.id WHERE car.customer_count > 1000 AND car.delete_ts IS NULL AND sa.delete_ts IS NULL ORDER BY car.customer_count DESC;"
  },
  {
    "question": "对比不同车辆类型在工作日与周末的通行量差异",
    "sql": "SELECT car_type AS 车辆类型, AVG(CASE WHEN EXTRACT(DOW FROM count_date) IN (0,6) THEN customer_count ELSE NULL END) AS 周末日均流量, AVG(CASE WHEN EXTRACT(DOW FROM count_date) NOT IN (0,6) THEN customer_count ELSE NULL END) AS 工作日日均流量 FROM bss_car_day_count WHERE delete_ts IS NULL GROUP BY car_type;"
  },
  {
    "question": "统计各服务区近30天车流热力分布（按地理坐标聚合）",
    "sql": "SELECT sa.service_position AS 地理坐标, sa.service_area_name AS 服务区名称, SUM(car.customer_count) AS 总流量 FROM bss_car_day_count car INNER JOIN bss_service_area sa ON car.service_area_id = sa.id WHERE car.count_date >= CURRENT_DATE - 30 AND car.delete_ts IS NULL AND sa.delete_ts IS NULL GROUP BY sa.service_position, sa.service_area_name;"
  },
  {
    "question": "分析过境车辆在不同路段服务区的通行规律（按路线名称维度）",
    "sql": "SELECT r.route_name AS 路线名称, SUM(car.customer_count) AS 过境车流量 FROM bss_car_day_count car INNER JOIN bss_service_area sa ON car.service_area_id = sa.id INNER JOIN bss_section_route_area_link link ON sa.id = link.service_area_id INNER JOIN bss_section_route r ON link.section_route_id = r.id WHERE car.car_type='过境' AND car.delete_ts IS NULL GROUP BY r.route_name ORDER BY 过境车流量 DESC;"
  },
  {
    "question": "计算各季度不同类型车辆的流量占比变化趋势",
    "sql": "SELECT EXTRACT(QUARTER FROM count_date) AS 季度, car_type AS 车辆类型, SUM(customer_count) AS 总流量 FROM bss_car_day_count WHERE delete_ts IS NULL GROUP BY EXTRACT(QUARTER FROM count_date), car_type ORDER BY 季度, 总流量 DESC;"
  },
  {
    "question": "查询危化品车辆通行量最高的3个服务区及其月度峰值数据",
    "sql": "SELECT sa.service_area_name AS 服务区名称, TO_CHAR(car.count_date, 'YYYY-MM') AS 月份, SUM(car.customer_count) AS 危化品流量 FROM bss_car_day_count car INNER JOIN bss_service_area sa ON car.service_area_id = sa.id WHERE car_type='危化品' AND car.delete_ts IS NULL GROUP BY sa.service_area_name, TO_CHAR(car.count_date, 'YYYY-MM') ORDER BY 危化品流量 DESC LIMIT 3;"
  },
  {
    "question": "分析相邻服务区间的车流密度分布（按地理坐标距离计算）",
    "sql": "SELECT a.service_area_name AS 服务区A, b.service_area_name AS 服务区B, ROUND((SQRT(POWER(SPLIT_PART(a.service_position, ',', 1)::float - SPLIT_PART(b.service_position, ',', 1)::float, 2) + POWER(SPLIT_PART(a.service_position, ',', 2)::float - SPLIT_PART(b.service_position, ',', 2)::float, 2)))::numeric, 2) AS 直线距离, SUM(car.customer_count) AS 总车流量 FROM bss_service_area a INNER JOIN bss_service_area b ON a.id != b.id CROSS JOIN LATERAL (SELECT * FROM bss_car_day_count WHERE service_area_id IN (a.id, b.id) AND delete_ts IS NULL) car GROUP BY a.service_area_name, b.service_area_name, 直线距离 ORDER BY 直线距离 ASC;"
  },
  {
    "question": "统计各分公司的管辖服务区总营收贡献排名（按金额降序）",
    "sql": "SELECT c.company_name AS 分公司名称, SUM(b.pay_sum) AS 总营收贡献 FROM bss_business_day_data b JOIN bss_service_area s ON b.service_no = s.service_area_no JOIN bss_company c ON s.company_id = c.id WHERE b.delete_ts IS NULL AND s.delete_ts IS NULL AND c.delete_ts IS NULL GROUP BY c.company_name ORDER BY 总营收贡献 DESC;"
  },
  {
    "question": "分析信息化与智能化服务区类型的日均订单数量对比",
    "sql": "SELECT s.service_area_type AS 服务区类型, AVG(b.order_sum) AS 日均订单量 FROM bss_business_day_data b JOIN bss_service_area s ON b.service_no = s.service_area_no WHERE b.delete_ts IS NULL AND s.delete_ts IS NULL GROUP BY s.service_area_type;"
  },
  {
    "question": "查询最近7天各分公司日均营收贡献TOP3",
    "sql": "SELECT * FROM (SELECT c.company_name AS 分公司名称, AVG(b.pay_sum) AS 日均营收 FROM bss_business_day_data b JOIN bss_service_area s ON b.service_no = s.service_area_no JOIN bss_company c ON s.company_id = c.id WHERE b.oper_date >= CURRENT_DATE - INTERVAL '7 days' AND b.delete_ts IS NULL GROUP BY c.company_name) t ORDER BY 日均营收 DESC LIMIT 3;"
  },
  {
    "question": "统计各分公司的服务区数量及关闭比例",
    "sql": "SELECT c.company_name AS 分公司名称, COUNT(s.id) AS 服务区总数, SUM(CASE WHEN s.service_state='关闭' THEN 1 ELSE 0 END)*100.0/COUNT(s.id) AS 关闭比例 FROM bss_company c JOIN bss_service_area s ON c.id = s.company_id WHERE c.delete_ts IS NULL GROUP BY c.company_name;"
  },
  {
    "question": "找出上周每日营收前三的服务区及所属分公司",
    "sql": "WITH ranked_data AS (SELECT b.oper_date AS 统计日期, s.service_area_name AS 服务区名称, c.company_name AS 分公司名称, b.pay_sum AS 营收金额, RANK() OVER (PARTITION BY b.oper_date ORDER BY b.pay_sum DESC) AS 排名 FROM bss_business_day_data b JOIN bss_service_area s ON b.service_no = s.service_area_no JOIN bss_company c ON s.company_id = c.id WHERE b.oper_date BETWEEN CURRENT_DATE - INTERVAL '7 days' AND CURRENT_DATE - INTERVAL '1 days') SELECT 统计日期, 分公司名称, 服务区名称, 营收金额 FROM ranked_data WHERE 排名 <= 3;"
  },
  {
    "question": "分析支付宝+微信支付金额占比超50%的分公司",
    "sql": "SELECT c.company_name AS 分公司名称, (SUM(b.wx + b.zfb)/SUM(b.pay_sum))*100 AS 支付占比 FROM bss_business_day_data b JOIN bss_service_area s ON b.service_no = s.service_area_no JOIN bss_company c ON s.company_id = c.id WHERE b.delete_ts IS NULL GROUP BY c.company_name HAVING (SUM(b.wx + b.zfb)/SUM(b.pay_sum)) > 50;"
  },
  {
    "question": "对比各分公司本月与上月营收环比增长率",
    "sql": "WITH monthly_data AS (SELECT c.company_name AS 分公司名称, DATE_TRUNC('month', b.oper_date) AS 月份, SUM(b.pay_sum) AS 月营收 FROM bss_business_day_data b JOIN bss_service_area s ON b.service_no = s.service_area_no JOIN bss_company c ON s.company_id = c.id WHERE b.oper_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '2 months' GROUP BY 分公司名称, 月份) SELECT cur.分公司名称, ((cur.月营收/prev.月营收)-1)*100 AS 环比增长率 FROM monthly_data cur JOIN monthly_data prev ON cur.分公司名称 = prev.分公司名称 AND cur.月份 = prev.月份 + INTERVAL '1 month';"
  },
  {
    "question": "统计连续3天订单量下降的服务区及所属分公司",
    "sql": "WITH daily_order AS (SELECT s.service_area_name AS 服务区名称, c.company_name AS 分公司名称, b.oper_date AS 日期, b.order_sum AS 订单量 FROM bss_business_day_data b JOIN bss_service_area s ON b.service_no = s.service_area_no JOIN bss_company c ON s.company_id = c.id WHERE b.delete_ts IS NULL), order_trend AS (SELECT *, LAG(订单量,1) OVER (PARTITION BY 服务区名称 ORDER BY 日期) AS 前一日订单量 FROM daily_order) SELECT DISTINCT 服务区名称, 分公司名称 FROM (SELECT *, CASE WHEN 订单量 < 前一日订单量 AND 前一日订单量 < LAG(订单量,2) OVER (PARTITION BY 服务区名称 ORDER BY 日期) THEN 1 ELSE 0 END AS 连续下降 FROM order_trend) t WHERE 连续下降 = 1;"
  },
  {
    "question": "查询现金支付比例超过10%的服务区明细",
    "sql": "SELECT s.service_area_name AS 服务区名称, c.company_name AS 分公司名称, (SUM(b.rmb)/SUM(b.pay_sum))*100 AS 现金比例 FROM bss_business_day_data b JOIN bss_service_area s ON b.service_no = s.service_area_no JOIN bss_company c ON s.company_id = c.id WHERE b.delete_ts IS NULL GROUP BY s.service_area_name, c.company_name HAVING (SUM(b.rmb)/SUM(b.pay_sum)) > 10;"
  },
  {
    "question": "统计各分公司管辖服务区的月均车流TOP5",
    "sql": "SELECT c.company_name AS 分公司名称, s.service_area_name AS 服务区名称, AVG(car.customer_count) AS 月均车流 FROM bss_car_day_count car JOIN bss_service_area s ON car.service_area_id = s.id JOIN bss_company c ON s.company_id = c.id WHERE car.delete_ts IS NULL GROUP BY c.company_name, s.service_area_name ORDER BY 月均车流 DESC LIMIT 5;"
  },
  {
    "question": "统计各路线关联的总车流量及平均车流量（近30天），按总车流量排序",
    "sql": "SELECT r.route_name AS 路线名称, SUM(c.customer_count) AS 总车流量, AVG(c.customer_count) AS 平均车流量 FROM bss_section_route_area_link l JOIN bss_section_route r ON l.section_route_id = r.id JOIN bss_car_day_count c ON l.service_area_id = c.service_area_id WHERE c.count_date >= CURRENT_DATE - 30 AND c.delete_ts IS NULL GROUP BY r.route_name ORDER BY 总车流量 DESC;"
  },
  {
    "question": "分析2023年4月各服务区车流量TOP10排名",
    "sql": "SELECT s.service_area_name AS 服务区名称, SUM(c.customer_count) AS 月总车流量, RANK() OVER (ORDER BY SUM(c.customer_count) DESC) AS 排名 FROM bss_car_day_count c JOIN bss_service_area s ON c.service_area_id = s.id WHERE c.count_date BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY s.service_area_name LIMIT 10;"
  },
  {
    "question": "计算每条路线关联服务区数量及最近服务区开通时间",
    "sql": "SELECT r.route_name AS 路线名称, COUNT(l.service_area_id) AS 关联服务区数, MAX(s.create_ts) AS 最近开通时间 FROM bss_section_route r LEFT JOIN bss_section_route_area_link l ON r.id = l.section_route_id LEFT JOIN bss_service_area s ON l.service_area_id = s.id GROUP BY r.route_name ORDER BY 关联服务区数 DESC;"
  },
  {
    "question": "对比不同公司管辖路段的车流量分布（按城际/过境车辆分类）",
    "sql": "SELECT cmp.company_name AS 管辖公司, c.car_type AS 车辆类型, SUM(c.customer_count) AS 总车流量 FROM bss_car_day_count c JOIN bss_service_area sa ON c.service_area_id = sa.id JOIN bss_company cmp ON sa.company_id = cmp.id WHERE c.car_type IN ('城际','过境') GROUP BY cmp.company_name, c.car_type ORDER BY 管辖公司, 车辆类型;"
  },
  {
    "question": "查找过去一周无车流记录的服务区清单",
    "sql": "SELECT s.service_area_name AS 服务区名称 FROM bss_service_area s LEFT JOIN bss_car_day_count c ON s.id = c.service_area_id AND c.count_date >= CURRENT_DATE - 7 WHERE c.id IS NULL AND s.delete_ts IS NULL ORDER BY s.service_area_name;"
  },
  {
    "question": "分析节假日与工作日车流量差异（以清明节假期为例）",
    "sql": "SELECT CASE WHEN count_date IN ('2023-04-01','2023-04-02','2023-04-05') THEN '节假日' ELSE '工作日' END AS 日期类型, AVG(customer_count) AS 日均车流量 FROM bss_car_day_count WHERE count_date BETWEEN '2023-04-01' AND '2023-04-07' GROUP BY 日期类型;"
  },
  {
    "question": "计算各路线车流密度（车流量/路段长度）并排序",
    "sql": "SELECT r.route_name AS 路线名称, SUM(c.customer_count) / MAX(LENGTH(r.section_name))::numeric AS 车流密度 FROM bss_section_route r JOIN bss_section_route_area_link l ON r.id = l.section_route_id JOIN bss_car_day_count c ON l.service_area_id = c.service_area_id WHERE c.count_date = '2023-04-01' GROUP BY r.route_name ORDER BY 车流密度 DESC;"
  },
  {
    "question": "查询昌九路线各服务区近30天日均车流量变化趋势",
    "sql": "SELECT c.count_date AS 统计日期, s.service_area_name AS 服务区名称, AVG(c.customer_count) AS 日均车流量 FROM bss_car_day_count c JOIN bss_service_area s ON c.service_area_id = s.id JOIN bss_section_route_area_link l ON s.id = l.service_area_id JOIN bss_section_route r ON l.section_route_id = r.id WHERE r.route_name = '昌九' AND c.count_date >= CURRENT_DATE - 30 GROUP BY c.count_date, s.service_area_name ORDER BY 统计日期 DESC;"
  },
  {
    "question": "统计各月份车流量同比增长率（对比2022与2023年）",
    "sql": "WITH monthly_data AS (SELECT EXTRACT(MONTH FROM count_date) AS 月份, SUM(customer_count) AS 总车流量, EXTRACT(YEAR FROM count_date) AS 年份 FROM bss_car_day_count GROUP BY 月份, 年份) SELECT m1.月份, m1.总车流量 AS \"2023年流量\", m2.总车流量 AS \"2022年流量\", ROUND((m1.总车流量 - m2.总车流量)/m2.总车流量 * 100, 2) || '%' AS 增长率 FROM monthly_data m1 JOIN monthly_data m2 ON m1.月份 = m2.月份 WHERE m1.年份 = 2023 AND m2.年份 = 2022 ORDER BY 月份;"
  },
  {
    "question": "查找未关联任何路线的服务区清单",
    "sql": "SELECT service_area_name AS 服务区名称 FROM bss_service_area WHERE id NOT IN (SELECT service_area_id FROM bss_section_route_area_link) AND delete_ts IS NULL ORDER BY service_area_name;"
  },
  {
    "question": "统计各来源系统（驿购/驿美等）映射的服务区数量及占比",
    "sql": "SELECT source_system_type AS 数据来源系统, COUNT(*) AS 服务区数量, ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM bss_service_area_mapper WHERE delete_ts IS NULL), 2) AS 占比百分比 FROM bss_service_area_mapper WHERE delete_ts IS NULL GROUP BY source_system_type ORDER BY 服务区数量 DESC;"
  },
  {
    "question": "对比不同来源系统的最新数据更新时间差异",
    "sql": "SELECT m.source_system_type AS 数据来源系统, MAX(b.update_ts) AS 最新经营数据更新时间, MAX(c.update_ts) AS 最新车流数据更新时间 FROM bss_service_area_mapper m LEFT JOIN bss_business_day_data b ON m.service_no = b.service_no LEFT JOIN bss_car_day_count c ON m.service_area_id = c.service_area_id WHERE m.delete_ts IS NULL GROUP BY m.source_system_type;"
  },
  {
    "question": "查询存在经营数据但无对应车流数据的服务区及来源系统",
    "sql": "SELECT m.service_name AS 服务区名称, m.source_system_type AS 数据来源系统 FROM bss_service_area_mapper m LEFT JOIN bss_car_day_count c ON m.service_area_id = c.service_area_id WHERE m.delete_ts IS NULL AND c.id IS NULL AND EXISTS(SELECT 1 FROM bss_business_day_data d WHERE d.service_no = m.service_no);"
  },
  {
    "question": "分析最近一周各来源系统的数据更新频率（按更新天数统计）",
    "sql": "SELECT m.source_system_type AS 数据来源系统, COUNT(DISTINCT DATE(b.update_ts)) AS 更新天数 FROM bss_service_area_mapper m JOIN bss_business_day_data b ON m.service_no = b.service_no WHERE m.delete_ts IS NULL AND b.update_ts >= CURRENT_DATE - INTERVAL '7 days' GROUP BY m.source_system_type;"
  },
  {
    "question": "统计不同编码类型（数字/字母开头）的来源系统分布情况",
    "sql": "SELECT CASE WHEN service_no ~ '^\\d' THEN '数字编码' ELSE '字母编码' END AS 编码类型, source_system_type AS 数据来源系统, COUNT(*) AS 数量 FROM bss_service_area_mapper WHERE delete_ts IS NULL GROUP BY 编码类型, source_system_type ORDER BY 编码类型, 数量 DESC;"
  },
  {
    "question": "查询2023年4月1日新增且来源为手工录入的服务区明细",
    "sql": "SELECT service_name AS 服务区名称, service_no AS 服务区编码, create_ts AS 创建时间 FROM bss_service_area_mapper WHERE DATE(create_ts) = '2023-04-01' AND source_system_type = '手工录入' AND delete_ts IS NULL;"
  },
  {
    "question": "分析各公司下属服务区的来源系统覆盖完整性（按公司统计）",
    "sql": "SELECT com.company_name AS 公司名称, COUNT(m.id) AS 已覆盖服务区数量, COUNT(s.id) AS 总服务区数量, ROUND(COUNT(m.id) * 100.0 / COUNT(s.id), 2) AS 覆盖率 FROM bss_company com LEFT JOIN bss_service_area s ON com.id = s.company_id LEFT JOIN bss_service_area_mapper m ON s.service_area_no = m.service_no AND m.delete_ts IS NULL WHERE com.delete_ts IS NULL GROUP BY com.company_name HAVING COUNT(s.id) > 0;"
  },
  {
    "question": "计算各来源系统的经营数据更新延迟天数（与经营日期相比）",
    "sql": "SELECT m.source_system_type AS 数据来源系统, AVG(EXTRACT(DAY FROM NOW() - b.oper_date)) AS 平均延迟天数 FROM bss_service_area_mapper m JOIN bss_business_day_data b ON m.service_no = b.service_no WHERE m.delete_ts IS NULL AND b.oper_date < CURRENT_DATE GROUP BY m.source_system_type;"
  },
  {
    "question": "查询最近30天未进行任何数据更新的服务区及对应来源系统",
    "sql": "SELECT m.service_name AS 服务区名称, m.source_system_type AS 数据来源系统 FROM bss_service_area_mapper m LEFT JOIN bss_business_day_data b ON m.service_no = b.service_no WHERE m.delete_ts IS NULL GROUP BY m.id HAVING MAX(b.update_ts) < CURRENT_DATE - INTERVAL '30 days' OR COUNT(b.id) = 0;"
  },
  {
    "question": "分析不同来源系统的经营数据支付金额占比（按微信/支付宝/现金分类）",
    "sql": "SELECT m.source_system_type AS 数据来源系统, SUM(b.wx) AS 微信支付总额, SUM(b.zfb) AS 支付宝支付总额, SUM(b.rmb) AS 现金支付总额 FROM bss_service_area_mapper m JOIN bss_business_day_data b ON m.service_no = b.service_no WHERE m.delete_ts IS NULL AND b.oper_date = CURRENT_DATE - INTERVAL '1 day' GROUP BY m.source_system_type;"
  }
]