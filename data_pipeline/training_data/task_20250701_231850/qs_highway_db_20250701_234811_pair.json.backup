[
  {
    "question": "统计2023-04-01各服务区总营收并按金额降序排列",
    "sql": "SELECT service_name AS 服务区名称, SUM(pay_sum) AS 日营收总额 FROM bss_business_day_data WHERE oper_date = '2023-04-01' AND delete_ts IS NULL GROUP BY service_name ORDER BY 日营收总额 DESC;"
  },
  {
    "question": "查询宜春服务区2023年4月各档口营收排名TOP5",
    "sql": "SELECT branch_name AS 档口名称, SUM(pay_sum) AS 总营收 FROM bss_business_day_data WHERE service_name = '宜春服务区' AND oper_date BETWEEN '2023-04-01' AND '2023-04-30' AND delete_ts IS NULL GROUP BY 档口名称 ORDER BY 总营收 DESC LIMIT 5;"
  },
  {
    "question": "分析2023-04-02各服务区微信支付占比（微信金额/总支付金额）",
    "sql": "SELECT service_name AS 服务区名称, ROUND(SUM(wx)/SUM(pay_sum)*100, 2) AS 微信占比百分比 FROM bss_business_day_data WHERE oper_date = '2023-04-02' AND delete_ts IS NULL GROUP BY service_name;"
  },
  {
    "question": "对比庐山服务区2023年3月与4月日均营收变化趋势",
    "sql": "SELECT EXTRACT(MONTH FROM oper_date) AS 月份, AVG(pay_sum) AS 日均营收 FROM bss_business_day_data WHERE service_name = '庐山服务区' AND EXTRACT(MONTH FROM oper_date) IN (3,4) AND delete_ts IS NULL GROUP BY 月份 ORDER BY 月份;"
  },
  {
    "question": "统计各服务区近7天现金支付金额环比增长率（当前周-上一周）",
    "sql": "SELECT service_name AS 服务区名称, SUM(CASE WHEN oper_date BETWEEN CURRENT_DATE - 7 AND CURRENT_DATE THEN pay_sum ELSE 0 END) - SUM(CASE WHEN oper_date BETWEEN CURRENT_DATE - 14 AND CURRENT_DATE - 8 THEN pay_sum ELSE 0 END) AS 现金增长额 FROM bss_business_day_data WHERE delete_ts IS NULL GROUP BY service_name;"
  },
  {
    "question": "查询各服务区支付宝订单占比超过10%的记录（按日期筛选）",
    "sql": "SELECT oper_date AS 统计日期, service_name AS 服务区名称, SUM(zf_order) AS 支付宝订单数, SUM(order_sum) AS 总订单数 FROM bss_business_day_data WHERE delete_ts IS NULL GROUP BY 统计日期, 服务区名称 HAVING SUM(zf_order)/SUM(order_sum) > 0.1 ORDER BY 统计日期 DESC;"
  },
  {
    "question": "分析行吧支付使用情况（订单数前10的服务区及使用率）",
    "sql": "SELECT service_name AS 服务区名称, SUM(xs_order) AS 行吧订单数, SUM(order_sum) AS 总订单数, ROUND(SUM(xs_order)/SUM(order_sum)*100, 2) AS 使用率百分比 FROM bss_business_day_data WHERE delete_ts IS NULL GROUP BY 服务区名称 ORDER BY 行吧订单数 DESC LIMIT 10;"
  },
  {
    "question": "统计各服务区最近一天营收数据并标注数据来源类型",
    "sql": "SELECT DISTINCT ON (service_name) service_name AS 服务区名称, oper_date AS 统计日期, pay_sum AS 营收金额, source_type AS 数据来源类型 FROM bss_business_day_data WHERE delete_ts IS NULL ORDER BY service_name, oper_date DESC;"
  },
  {
    "question": "查询2023-04-01宜春南区档口各支付方式金额及占比",
    "sql": "SELECT '微信' AS 支付方式, wx AS 金额, ROUND(wx/pay_sum*100, 2) AS 占比 FROM bss_business_day_data WHERE branch_name = '宜春南区' AND oper_date = '2023-04-01' AND delete_ts IS NULL UNION ALL SELECT '支付宝', zfb, ROUND(zfb/pay_sum*100, 2) FROM bss_business_day_data WHERE branch_name = '宜春南区' AND oper_date = '2023-04-01' AND delete_ts IS NULL UNION ALL SELECT '现金', rmb, ROUND(rmb/pay_sum*100, 2) FROM bss_business_day_data WHERE branch_name = '宜春南区' AND oper_date = '2023-04-01' AND delete_ts IS NULL;"
  },
  {
    "question": "分析各服务区近30天日营收标准差评估经营稳定性",
    "sql": "SELECT service_name AS 服务区名称, STDDEV_SAMP(pay_sum) AS 日营收标准差 FROM bss_business_day_data WHERE oper_date >= CURRENT_DATE - 30 AND delete_ts IS NULL GROUP BY service_name ORDER BY 标准差 DESC;"
  },
  {
    "question": "统计各服务区不同车型的车流量占比，用于资源配置优化",
    "sql": "SELECT service_area_id AS 服务区ID, car_type AS 车辆类型, SUM(customer_count) AS 总车流量, ROUND((SUM(customer_count)*100.0/SUM(SUM(customer_count)) OVER(PARTITION BY service_area_id)),2) AS 占比百分比 FROM bss_car_day_count WHERE delete_ts IS NULL GROUP BY service_area_id, car_type ORDER BY service_area_id, 总车流量 DESC;"
  },
  {
    "question": "分析2023年4月各服务区每日车流量趋势变化，识别高峰期",
    "sql": "SELECT count_date AS 统计日期, service_area_id AS 服务区ID, SUM(customer_count) AS 日车流量 FROM bss_car_day_count WHERE delete_ts IS NULL AND count_date BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY count_date, service_area_id ORDER BY count_date;"
  },
  {
    "question": "查询2023年4月1日当日车流量最高的前5个服务区",
    "sql": "SELECT service_area_id AS 服务区ID, SUM(customer_count) AS 当日车流量 FROM bss_car_day_count WHERE delete_ts IS NULL AND count_date = '2023-04-01' GROUP BY service_area_id ORDER BY 当日车流量 DESC LIMIT 5;"
  },
  {
    "question": "统计各服务区危化品车辆出现频次，用于安全管理评估",
    "sql": "SELECT service_area_id AS 服务区ID, SUM(customer_count) AS 危化品车辆总数 FROM bss_car_day_count WHERE delete_ts IS NULL AND car_type = '危化品' GROUP BY service_area_id ORDER BY 危化品车辆总数 DESC;"
  },
  {
    "question": "分析各服务区车流量月环比增长趋势（按2023年Q2数据）",
    "sql": "SELECT service_area_id AS 服务区ID, month AS 月份, total_count AS 当月车流量, prev_month_count AS 上月车流量, ROUND(((total_count-prev_month_count)*100.0/prev_month_count),2) AS 环比增长率 FROM (SELECT service_area_id, DATE_TRUNC('month', count_date) AS month, SUM(customer_count) AS total_count, LAG(SUM(customer_count)) OVER(PARTITION BY service_area_id ORDER BY DATE_TRUNC('month', count_date)) AS prev_month_count FROM bss_car_day_count WHERE delete_ts IS NULL AND count_date BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY service_area_id, DATE_TRUNC('month', count_date)) AS monthly_data ORDER BY service_area_id, 月份;"
  },
  {
    "question": "对比周末与工作日各服务区平均车流量差异",
    "sql": "SELECT service_area_id AS 服务区ID, AVG(CASE WHEN EXTRACT(ISODOW FROM count_date) IN (6,7) THEN customer_count END) AS 周末日均车流量, AVG(CASE WHEN EXTRACT(ISODOW FROM count_date) NOT IN (6,7) THEN customer_count END) AS 工作日均车流量 FROM bss_car_day_count WHERE delete_ts IS NULL GROUP BY service_area_id;"
  },
  {
    "question": "查询2023年4月城际车辆流量最高的前3个服务区",
    "sql": "SELECT service_area_id AS 服务区ID, SUM(customer_count) AS 城际车流量 FROM bss_car_day_count WHERE delete_ts IS NULL AND car_type = '城际' AND count_date BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY service_area_id ORDER BY 城际车流量 DESC LIMIT 3;"
  },
  {
    "question": "分析各服务区不同车型的月均车流量分布",
    "sql": "SELECT service_area_id AS 服务区ID, car_type AS 车辆类型, ROUND(AVG(customer_count), 2) AS 月均车流量 FROM bss_car_day_count WHERE delete_ts IS NULL GROUP BY service_area_id, car_type ORDER BY service_area_id, 月均车流量 DESC;"
  },
  {
    "question": "识别最近7天各服务区车流量TOP3日期",
    "sql": "SELECT * FROM (SELECT service_area_id, count_date AS 统计日期, customer_count AS 车流量, ROW_NUMBER() OVER(PARTITION BY service_area_id ORDER BY customer_count DESC) AS rn FROM bss_car_day_count WHERE delete_ts IS NULL AND count_date >= CURRENT_DATE - 7) t WHERE rn <= 3 ORDER BY service_area_id, 车流量 DESC;"
  },
  {
    "question": "统计各服务区过境车辆与城际车辆流量比值，分析交通特性",
    "sql": "SELECT service_area_id AS 服务区ID, (SUM(CASE WHEN car_type = '过境' THEN customer_count ELSE 0 END) * 1.0 / NULLIF(SUM(CASE WHEN car_type = '城际' THEN customer_count ELSE 0 END), 0)) AS 过境城际比 FROM bss_car_day_count WHERE delete_ts IS NULL GROUP BY service_area_id ORDER BY 过境城际比 DESC;"
  },
  {
    "question": "各档口单位车流的坪效对比（总支付金额/车辆数量）排名TOP10",
    "sql": "SELECT b.branch_name AS 档口名称, ROUND(SUM(b.pay_sum) / SUM(c.customer_count), 2) AS 坪效 FROM bss_business_day_data b JOIN bss_car_day_count c ON b.service_no = c.service_area_id WHERE b.delete_ts IS NULL AND c.delete_ts IS NULL GROUP BY b.branch_name ORDER BY 坪效 DESC LIMIT 10;"
  },
  {
    "question": "各档口客单价（总支付金额/订单总数）最高前5名",
    "sql": "SELECT branch_name AS 档口名称, ROUND(SUM(pay_sum) / SUM(order_sum), 2) AS 客单价 FROM bss_business_day_data WHERE delete_ts IS NULL AND order_sum > 0 GROUP BY branch_name ORDER BY 客单价 DESC LIMIT 5;"
  },
  {
    "question": "不同服务区档口的平均坪效对比（排除0订单数据）",
    "sql": "SELECT service_name AS 服务区名称, ROUND(AVG(pay_sum / NULLIF(customer_count, 0)), 2) AS 平均坪效 FROM (SELECT b.service_name, SUM(b.pay_sum) AS pay_sum, SUM(c.customer_count) AS customer_count FROM bss_business_day_data b JOIN bss_car_day_count c ON b.service_no = c.service_area_id WHERE b.delete_ts IS NULL AND c.delete_ts IS NULL GROUP BY b.service_name, b.oper_date HAVING SUM(b.order_sum) > 0) AS sub GROUP BY service_name ORDER BY 平均坪效 DESC;"
  },
  {
    "question": "最近7天微信支付占比超过50%的档口清单",
    "sql": "SELECT branch_name AS 档口名称, SUM(wx) / SUM(pay_sum) AS 微信占比 FROM bss_business_day_data WHERE oper_date >= CURRENT_DATE - INTERVAL '7 days' AND delete_ts IS NULL GROUP BY branch_name HAVING SUM(pay_sum) > 0 AND SUM(wx)/SUM(pay_sum) > 0.5 ORDER BY 微信占比 DESC;"
  },
  {
    "question": "各时段（早/中/晚）档口客单价分布统计",
    "sql": "SELECT CASE WHEN EXTRACT(HOUR FROM create_ts) < 12 THEN '上午' WHEN EXTRACT(HOUR FROM create_ts) < 18 THEN '下午' ELSE '晚上' END AS 时段, ROUND(AVG(pay_sum/order_sum), 2) AS 平均客单价 FROM bss_business_day_data WHERE delete_ts IS NULL AND order_sum > 0 GROUP BY 时段 ORDER BY 时段;"
  },
  {
    "question": "车辆数量TOP5但营收低于平均值的档口预警",
    "sql": "SELECT c.service_area_id AS 服务区ID, b.branch_name AS 档口名称, SUM(c.customer_count) AS 总车流量, SUM(b.pay_sum) AS 总营收 FROM bss_car_day_count c JOIN bss_business_day_data b ON c.service_area_id = b.service_no WHERE c.delete_ts IS NULL AND b.delete_ts IS NULL GROUP BY c.service_area_id, b.branch_name HAVING SUM(c.customer_count) > (SELECT AVG(customer_count) FROM bss_car_day_count WHERE delete_ts IS NULL) AND SUM(b.pay_sum) < (SELECT AVG(pay_sum) FROM bss_business_day_data WHERE delete_ts IS NULL) ORDER BY 总车流量 DESC LIMIT 5;"
  },
  {
    "question": "各档口不同支付方式金额占比分析",
    "sql": "SELECT branch_name AS 档口名称, ROUND(SUM(wx)/SUM(pay_sum)*100, 2) AS 微信占比, ROUND(SUM(zfb)/SUM(pay_sum)*100, 2) AS 支付宝占比, ROUND(SUM(rmb)/SUM(pay_sum)*100, 2) AS 现金占比 FROM bss_business_day_data WHERE delete_ts IS NULL GROUP BY branch_name ORDER BY 微信占比 DESC;"
  },
  {
    "question": "节假日（假设2023-04-01至2023-04-05）期间坪效波动趋势",
    "sql": "SELECT oper_date AS 日期, ROUND(SUM(pay_sum)/SUM(c.customer_count), 2) AS 日坪效 FROM bss_business_day_data b JOIN bss_car_day_count c ON b.service_no = c.service_area_id WHERE b.oper_date BETWEEN '2023-04-01' AND '2023-04-05' AND b.delete_ts IS NULL AND c.delete_ts IS NULL GROUP BY oper_date ORDER BY 日期;"
  },
  {
    "question": "各档口订单转化率（订单数/车辆数量）排名及同比变化",
    "sql": "WITH current_period AS (SELECT branch_name, SUM(order_sum) AS orders, SUM(c.customer_count) AS customers FROM bss_business_day_data b JOIN bss_car_day_count c ON b.service_no = c.service_area_id WHERE b.oper_date >= '2023-04-01' AND b.oper_date <= '2023-04-07' GROUP BY branch_name), last_period AS (SELECT branch_name, SUM(order_sum) AS orders, SUM(c.customer_count) AS customers FROM bss_business_day_data b JOIN bss_car_day_count c ON b.service_no = c.service_area_id WHERE b.oper_date >= '2023-03-25' AND b.oper_date <= '2023-03-31' GROUP BY branch_name) SELECT c.branch_name AS 档口名称, ROUND(c.orders/c.customers, 4) AS 本期转化率, ROUND(l.orders/l.customers, 4) AS 上期转化率, ROUND((c.orders/c.customers - l.orders/l.customers)/NULLIF(l.orders/l.customers, 0)*100, 2) AS 变化率 FROM current_period c JOIN last_period l ON c.branch_name = l.branch_name ORDER BY 变化率 DESC;"
  },
  {
    "question": "特定档口（如branch_name='庐山鲜徕客东区'）近30天每日营收趋势",
    "sql": "SELECT oper_date AS 日期, pay_sum AS 营收金额 FROM bss_business_day_data WHERE branch_name = '庐山鲜徕客东区' AND delete_ts IS NULL AND oper_date >= CURRENT_DATE - INTERVAL '30 days' ORDER BY 日期 ASC;"
  },
  {
    "question": "节假日与非节假日各服务区平均日营收对比分析？",
    "sql": "SELECT CASE WHEN oper_date BETWEEN '2023-04-01' AND '2023-04-05' THEN '节假日期间' ELSE '常规时段' END AS 分析时段, service_name AS 服务区名称, ROUND(AVG(pay_sum)::numeric, 2) AS 平均日营收 FROM bss_business_day_data WHERE delete_ts IS NULL GROUP BY 分析时段, 服务区名称 ORDER BY 平均日营收 DESC;"
  },
  {
    "question": "节假日车流量TOP5服务区统计？",
    "sql": "SELECT service_area_id AS 服务区ID, SUM(customer_count) AS 总车流量 FROM bss_car_day_count WHERE count_date BETWEEN '2023-04-01' AND '2023-04-05' AND delete_ts IS NULL GROUP BY 服务区ID ORDER BY 总车流量 DESC LIMIT 5;"
  },
  {
    "question": "节前/节中/节后各支付方式订单占比趋势分析？",
    "sql": "SELECT CASE WHEN oper_date < '2023-04-01' THEN '节前' WHEN oper_date BETWEEN '2023-04-01' AND '2023-04-05' THEN '节中' ELSE '节后' END AS 阶段, ROUND(SUM(wx_order)*100/SUM(order_sum), 2) AS 微信占比, ROUND(SUM(zf_order)*100/SUM(order_sum), 2) AS 支付宝占比 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date BETWEEN '2023-03-25' AND '2023-04-10' GROUP BY 阶段 ORDER BY 阶段;"
  },
  {
    "question": "春节前后一周服务区营收增长率对比（2023-01-20至2023-01-26 vs 2023-01-27至2023-02-02）？",
    "sql": "WITH pre_period AS (SELECT service_name, SUM(pay_sum) AS 营收 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-01-20' AND '2023-01-26' GROUP BY service_name), post_period AS (SELECT service_name, SUM(pay_sum) AS 营收 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-01-27' AND '2023-02-02' GROUP BY service_name) SELECT a.service_name, ROUND((b.营收-a.营收)/a.营收*100, 2) AS 增长率 FROM pre_period a JOIN post_period b ON a.service_name = b.service_name ORDER BY 增长率 DESC;"
  },
  {
    "question": "节假日不同车型车流分布占比分析？",
    "sql": "SELECT car_type AS 车型, COUNT(*) AS 记录数, ROUND(CAST(COUNT(*) AS numeric)*100/(SELECT COUNT(*) FROM bss_car_day_count WHERE count_date BETWEEN '2023-04-01' AND '2023-04-05'), 2) AS 占比百分比 FROM bss_car_day_count WHERE count_date BETWEEN '2023-04-01' AND '2023-04-05' AND delete_ts IS NULL GROUP BY car_type ORDER BY 记录数 DESC;"
  },
  {
    "question": "节假日期间现金支付比例最高的3个服务区？",
    "sql": "SELECT service_name, ROUND(SUM(rmb) * 100 / SUM(pay_sum), 2) AS 现金占比 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-04-01' AND '2023-04-05' AND delete_ts IS NULL GROUP BY service_name ORDER BY 现金占比 DESC LIMIT 3;"
  },
  {
    "question": "节后三天内订单总量最低的5个服务区？",
    "sql": "SELECT service_name, SUM(order_sum) AS 总订单量 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-04-06' AND '2023-04-08' AND delete_ts IS NULL GROUP BY service_name ORDER BY 总订单量 ASC LIMIT 5;"
  },
  {
    "question": "节中期间微信支付金额环比增长TOP3服务区？",
    "sql": "SELECT service_name, oper_date, wx, LAG(wx,1) OVER (PARTITION BY service_name ORDER BY oper_date) AS 前一日, ROUND((wx - LAG(wx,1) OVER (PARTITION BY service_name ORDER BY oper_date)) / LAG(wx,1) OVER (PARTITION BY service_name ORDER BY oper_date) * 100, 2) AS 环比增长率 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-04-01' AND '2023-04-05' AND delete_ts IS NULL ORDER BY oper_date, 环比增长率 DESC;"
  },
  {
    "question": "国庆黄金周车流量同比去年增长情况分析？",
    "sql": "SELECT service_area_id, SUM(CASE WHEN count_date BETWEEN '2022-10-01' AND '2022-10-07' THEN customer_count ELSE 0 END) AS 去年车流量, SUM(CASE WHEN count_date BETWEEN '2023-10-01' AND '2023-10-07' THEN customer_count ELSE 0 END) AS 今年车流量, ROUND((SUM(CASE WHEN count_date BETWEEN '2023-10-01' AND '2023-10-07' THEN customer_count ELSE 0 END) - SUM(CASE WHEN count_date BETWEEN '2022-10-01' AND '2022-10-07' THEN customer_count ELSE 0 END)) * 100 / NULLIF(SUM(CASE WHEN count_date BETWEEN '2022-10-01' AND '2022-10-07' THEN customer_count ELSE 0 END), 0), 2) AS 增长率 FROM bss_car_day_count WHERE count_date BETWEEN '2022-10-01' AND '2023-10-07' AND delete_ts IS NULL GROUP BY service_area_id ORDER BY 增长率 DESC;"
  },
  {
    "question": "节后一周内营收恢复至节前90%水平的服务区统计？",
    "sql": "WITH pre_holiday AS (SELECT service_name, AVG(pay_sum) AS 节前均值 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-03-25' AND '2023-03-31' GROUP BY service_name), post_holiday AS (SELECT service_name, AVG(pay_sum) AS 节后均值 FROM bss_business_day_data WHERE oper_date BETWEEN '2023-04-06' AND '2023-04-12' GROUP BY service_name) SELECT a.service_name, ROUND(a.节前均值, 2) AS 节前均值, ROUND(b.节后均值, 2) AS 节后均值, ROUND(b.节后均值/a.节前均值*100, 2) AS 恢复比例 FROM pre_holiday a JOIN post_holiday b ON a.service_name = b.service_name WHERE b.节后均值 >= a.节前均值 * 0.9 ORDER BY 恢复比例 DESC;"
  },
  {
    "question": "统计最近一天营收-车流偏离度TOP10的服务区",
    "sql": "SELECT b.service_name AS 服务区名称, (b.pay_sum / NULLIF(c.customer_count, 0)) AS 营收车流比 FROM bss_business_day_data b JOIN bss_car_day_count c ON b.oper_date = c.count_date AND b.service_no = c.service_area_id WHERE b.delete_ts IS NULL AND c.delete_ts IS NULL AND b.oper_date = CURRENT_DATE - 1 ORDER BY 营收车流比 DESC LIMIT 10;"
  },
  {
    "question": "查找昨日微信支付订单占比低于5%的异常服务区",
    "sql": "SELECT service_name AS 服务区名称, wx_order AS 微信订单数, order_sum AS 总订单数, (wx_order::numeric / order_sum) AS 微信占比 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date = CURRENT_DATE - 1 AND order_sum > 0 AND (wx_order::numeric / order_sum) < 0.05;"
  },
  {
    "question": "分析最近一周各数据来源类型的营收分布",
    "sql": "SELECT source_type AS 数据来源类型, COUNT(*) AS 记录数, SUM(pay_sum) AS 总营收 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date >= CURRENT_DATE - 7 GROUP BY source_type ORDER BY 总营收 DESC;"
  },
  {
    "question": "查询过去24小时车流量为0但存在营收记录的服务区",
    "sql": "SELECT b.service_name AS 服务区名称, b.oper_date AS 日期, b.pay_sum AS 营收额 FROM bss_business_day_data b LEFT JOIN bss_car_day_count c ON b.oper_date = c.count_date AND b.service_no = c.service_area_id WHERE b.delete_ts IS NULL AND c.delete_ts IS NULL AND b.oper_date >= CURRENT_DATE - 1 AND (c.customer_count IS NULL OR c.customer_count = 0) AND b.pay_sum > 0;"
  },
  {
    "question": "计算各服务区近7天营收偏离度的标准差",
    "sql": "SELECT service_name AS 服务区名称, STDDEV_SAMP(pay_sum / NULLIF(customer_count, 0)) AS 营收偏离度标准差 FROM (SELECT * FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date >= CURRENT_DATE - 7) b JOIN (SELECT * FROM bss_car_day_count WHERE delete_ts IS NULL AND count_date >= CURRENT_DATE - 7) c ON b.oper_date = c.count_date AND b.service_no = c.service_area_id GROUP BY service_name ORDER BY 标准差 DESC LIMIT 10;"
  },
  {
    "question": "统计今日每小时的数据完整性校验结果",
    "sql": "SELECT EXTRACT(HOUR FROM create_ts) AS 小时段, COUNT(*) AS 记录数, SUM(CASE WHEN pay_sum > 0 THEN 1 ELSE 0 END) AS 有效记录数 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date = CURRENT_DATE GROUP BY EXTRACT(HOUR FROM create_ts) ORDER BY 小时段;"
  },
  {
    "question": "查找危化品车辆占比超过10%且营收异常的服务区",
    "sql": "SELECT c.count_date AS 日期, b.service_name AS 服务区名称, c.customer_count AS 车流量, b.pay_sum AS 营收额 FROM bss_business_day_data b JOIN (SELECT * FROM bss_car_day_count WHERE car_type = '危化品' AND customer_count > 0) c ON b.oper_date = c.count_date AND b.service_no = c.service_area_id WHERE b.delete_ts IS NULL AND c.delete_ts IS NULL AND (c.customer_count::numeric / (SELECT SUM(customer_count) FROM bss_car_day_count WHERE count_date = c.count_date AND service_area_id = c.service_area_id)) > 0.1;"
  },
  {
    "question": "分析连续3天营收增长但车流下降的异常服务区",
    "sql": "WITH revenue_trend AS (SELECT service_no, oper_date, pay_sum, LEAD(pay_sum, 1, 0) OVER (PARTITION BY service_no ORDER BY oper_date) AS next_pay_sum FROM bss_business_day_data WHERE delete_ts IS NULL), car_trend AS (SELECT service_area_id, count_date, customer_count, LEAD(customer_count, 1, 0) OVER (PARTITION BY service_area_id ORDER BY count_date) AS next_count FROM bss_car_day_count WHERE delete_ts IS NULL) SELECT r.service_no AS 服务区编码 FROM revenue_trend r JOIN car_trend c ON r.service_no = c.service_area_id AND r.oper_date = c.count_date WHERE r.pay_sum > r.next_pay_sum AND c.customer_count < c.next_count GROUP BY r.service_no HAVING COUNT(*) >= 3 LIMIT 10;"
  },
  {
    "question": "统计现金支付占比超过50%的异常档口",
    "sql": "SELECT branch_name AS 档口名称, rmb AS 现金支付额, pay_sum AS 总营收, (rmb::numeric / pay_sum) AS 现金占比 FROM bss_business_day_data WHERE delete_ts IS NULL AND oper_date = CURRENT_DATE - 1 AND pay_sum > 0 AND (rmb::numeric / pay_sum) > 0.5 ORDER BY 现金占比 DESC;"
  },
  {
    "question": "分析城际车辆占比与营收的相关性",
    "sql": "SELECT CORR((SELECT SUM(customer_count) FROM bss_car_day_count WHERE car_type = '城际' GROUP BY count_date), (SELECT SUM(pay_sum) FROM bss_business_day_data GROUP BY oper_date)) AS 相关系数 FROM bss_car_day_count LIMIT 1;"
  }
]